{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","loadPost","postDetails","deletePost","className","map","post","userId","title","id","type","onClick","request","url","fetch","then","response","json","getAllUsersPosts","getUserComments","NewCommentForm","addComment","useState","commentName","setCommentName","commentEmail","setCommentEmail","commentBody","setCommentBody","onSubmit","event","preventDefault","name","placeholder","value","onChange","target","required","PostDetails","comments","setComments","showComments","setShowComments","useEffect","a","newComments","filter","item","postId","loadComments","length","comment","commentId","body","email","newComment","App","setPosts","setPostDetails","selectUser","setSelectUser","newUser","newArr","Number","console","log","loadTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9043462.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[];\n  loadPost: (num: number) => void;\n  postDetails: Post | null;\n  deletePost: () => void;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  loadPost,\n  postDetails,\n  deletePost,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => {\n        return (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            {(postDetails !== null && post.id === postDetails.id) ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => deletePost()}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => loadPost(post.id)}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n};\n\nexport function getUserPosts(userId: string): Promise<Post[]> {\n  return request(`/posts?userId=${userId}`);\n}\n\nexport function getAllUsersPosts(): Promise<Post[]> {\n  return request('/posts');\n}\n\nexport function getUserComments(): Promise<PostComment[]> {\n  return request('/comments');\n}\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  addComment: (n1: string, n2: string, n3: string) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ addComment }) => {\n  const [commentName, setCommentName] = useState<string>('');\n  const [commentEmail, setCommentEmail] = useState<string>('');\n  const [commentBody, setCommentBody] = useState<string>('');\n\n  const addFormComment = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    addComment(commentName, commentEmail, commentBody);\n    setCommentName('');\n    setCommentEmail('');\n    setCommentBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={addFormComment}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={commentName}\n          onChange={(event) => {\n            setCommentName(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={commentEmail}\n          onChange={(event) => {\n            setCommentEmail(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentBody}\n          onChange={(event) => {\n            setCommentBody(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { getUserComments } from '../../api/api';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postDetails: Post;\n};\n\nexport const PostDetails: React.FC<Props> = ({ postDetails }) => {\n  const [comments, setComments] = useState<PostComment[]>([]);\n  const [showComments, setShowComments] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function loadComments() {\n      const newComments = await getUserComments();\n\n      setComments(newComments.filter(item => item.postId === postDetails.id));\n    }\n\n    loadComments();\n  }, [postDetails]);\n\n  const deleteComment = (commentId: number | undefined) => {\n    return setComments(comments.filter(comment => comment.id !== commentId));\n  };\n\n  const addComment = (name: string, email: string, body: string) => {\n    const newComment = {\n      id: comments.length,\n      postId: postDetails.id,\n      name,\n      email,\n      body,\n    };\n\n    setComments([...comments, newComment]);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {(comments.length > 0) ? (\n          <>\n            {showComments ? (\n              <>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => setShowComments(false)}\n                >\n                  Hide\n                  {' '}\n                  {comments.length}\n                  {' '}\n                  comments\n                </button>\n\n                <ul className=\"PostDetails__list\">\n                  {comments.length !== 0 && (\n                    <div>\n                      {comments.map(comment => (\n                        <li\n                          key={comment.id}\n                          className=\"PostDetails__list-item\"\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"PostDetails__remove-button button\"\n                            onClick={() => deleteComment(comment.id)}\n                          >\n                            X\n                          </button>\n                          <p>{comment.body}</p>\n                        </li>\n                      ))}\n                    </div>\n                  )}\n                </ul>\n              </>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button button__margin\"\n                onClick={() => setShowComments(true)}\n              >\n                Show\n                {' '}\n                {comments.length}\n                {' '}\n                comments\n              </button>\n            )}\n          </>\n        ) : (\n          <h3>\n            We do not have comments\n          </h3>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getAllUsersPosts } from './api/api';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[] | []>([]);\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [selectUser, setSelectUser] = useState<string>('0');\n\n  const loadPost = (postId: number) => {\n    setPostDetails(posts.filter(post => post.id === postId)[0]);\n  };\n\n  const deletePost = () => {\n    setPostDetails(null);\n  };\n\n  useEffect(() => {\n    async function loadTodo() {\n      const newUser = await getAllUsersPosts();\n\n      if (selectUser !== '0') {\n        const newArr = newUser.filter(item => item.userId === Number(selectUser));\n\n        console.log(newArr);\n\n        return setPosts(newArr);\n      }\n\n      return setPosts(newUser);\n    }\n\n    loadTodo();\n  }, [selectUser]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <form onSubmit={event => event.preventDefault()}>\n          <label>\n            Select a user: &nbsp;\n\n            <select\n              className=\"App__user-selector\"\n              value={selectUser}\n              onChange={(event) => {\n                setSelectUser(event.target.value);\n              }}\n            >\n              <option value=\"0\">All users</option>\n              <option value=\"1\">Leanne Graham</option>\n              <option value=\"2\">Ervin Howell</option>\n              <option value=\"3\">Clementine Bauch</option>\n              <option value=\"4\">Patricia Lebsack</option>\n              <option value=\"5\">Chelsey Dietrich</option>\n              <option value=\"6\">Mrs. Dennis Schulist</option>\n              <option value=\"7\">Kurtis Weissnat</option>\n              <option value=\"8\">Nicholas Runolfsdottir V</option>\n              <option value=\"9\">Glenna Reichert</option>\n              <option value=\"10\">Leanne Graham</option>\n            </select>\n          </label>\n        </form>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {posts.length > 0 && (\n            <PostsList\n              posts={posts}\n              loadPost={loadPost}\n              postDetails={postDetails}\n              deletePost={deletePost}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          {(postDetails !== null) && (\n            <PostDetails\n              postDetails={postDetails}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}